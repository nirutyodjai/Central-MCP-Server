// Investment Website Integration with Git Memory MCP
// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏à‡∏£‡∏¥‡∏á

// Mock investment data collection (‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á)
class InvestmentDataCollector {
  private gitMemory: any;

  constructor(gitMemoryInstance: any) {
    this.gitMemory = gitMemoryInstance;
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô‡∏à‡∏≤‡∏Å SET (‡∏à‡∏≥‡∏•‡∏≠‡∏á)
  async collectSETData(): Promise<void> {
    console.log('üìà Collecting SET (Stock Exchange of Thailand) data...');

    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢
    const setStocks = [
      {
        symbol: 'PTT',
        name: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏õ‡∏ï‡∏ó. ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏°‡∏´‡∏≤‡∏ä‡∏ô)',
        price: 35.5,
        change: +0.75,
        volume: 12500000,
        marketCap: 101300000000,
        sector: 'Energy & Utilities',
      },
      {
        symbol: 'AOT',
        name: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ó‡πà‡∏≤‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏¢‡∏≤‡∏ô‡πÑ‡∏ó‡∏¢ ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏°‡∏´‡∏≤‡∏ä‡∏ô)',
        price: 68.25,
        change: -1.25,
        volume: 8500000,
        marketCap: 97500000000,
        sector: 'Transportation & Logistics',
      },
      {
        symbol: 'CPALL',
        name: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ã‡∏µ‡∏û‡∏µ ‡∏≠‡∏≠‡∏•‡∏•‡πå ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏°‡∏´‡∏≤‡∏ä‡∏ô)',
        price: 62.75,
        change: +2.0,
        volume: 15200000,
        marketCap: 564000000000,
        sector: 'Commerce',
      },
      {
        symbol: 'SCB',
        name: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏°‡∏´‡∏≤‡∏ä‡∏ô)',
        price: 115.5,
        change: +1.5,
        volume: 6200000,
        marketCap: 392000000000,
        sector: 'Banking',
      },
      {
        symbol: 'ADVANC',
        name: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡πÅ‡∏≠‡∏î‡∏ß‡∏≤‡∏ô‡∏ã‡πå ‡∏≠‡∏¥‡∏ô‡πÇ‡∏ü‡∏£‡πå ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ß‡∏¥‡∏™ ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏°‡∏´‡∏≤‡∏ä‡∏ô)',
        price: 225.0,
        change: -3.0,
        volume: 4100000,
        marketCap: 669000000000,
        sector: 'Information & Communication Technology',
      },
    ];

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô‡πÉ‡∏ô Git Memory
    for (const stock of setStocks) {
      await this.gitMemory.store({
        type: 'set_stock',
        data: stock,
        collected_at: new Date().toISOString(),
        source: 'set_market_data',
      });
    }

    // ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô
    const totalMarketCap = setStocks.reduce(
      (sum, stock) => sum + stock.marketCap,
      0
    );
    const gainers = setStocks.filter(stock => stock.change > 0).length;
    const losers = setStocks.filter(stock => stock.change < 0).length;

    await this.gitMemory.store({
      type: 'set_market_summary',
      total_stocks: setStocks.length,
      total_market_cap: totalMarketCap,
      gainers: gainers,
      losers: losers,
      market_trend:
        gainers > losers ? 'up' : gainers < losers ? 'down' : 'sideways',
      collected_at: new Date().toISOString(),
    });

    console.log(`‚úÖ Collected ${setStocks.length} SET stocks`);
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• crypto currency (‡∏à‡∏≥‡∏•‡∏≠‡∏á)
  async collectCryptoData(): Promise<void> {
    console.log('‚Çø Collecting cryptocurrency data...');

    const cryptoData = [
      {
        symbol: 'BTC',
        name: 'Bitcoin',
        price: 43250.0,
        change_24h: +2.45,
        market_cap: 847000000000,
        volume_24h: 18500000000,
      },
      {
        symbol: 'ETH',
        name: 'Ethereum',
        price: 2650.0,
        change_24h: +1.82,
        market_cap: 318000000000,
        volume_24h: 12400000000,
      },
      {
        symbol: 'ADA',
        name: 'Cardano',
        price: 0.485,
        change_24h: -0.95,
        market_cap: 17100000000,
        volume_24h: 890000000,
      },
    ];

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• crypto ‡πÉ‡∏ô Git Memory
    for (const crypto of cryptoData) {
      await this.gitMemory.store({
        type: 'crypto_currency',
        data: crypto,
        collected_at: new Date().toISOString(),
        source: 'crypto_market_data',
      });
    }

    console.log(`‚úÖ Collected ${cryptoData.length} cryptocurrencies`);
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡πà‡∏≤‡∏ß‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô (‡∏à‡∏≥‡∏•‡∏≠‡∏á)
  async collectFinancialNews(): Promise<void> {
    console.log('üì∞ Collecting financial news...');

    const financialNews = [
      {
        title: '‡∏ò‡∏õ‡∏ó. ‡∏Ñ‡∏á‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ó‡∏µ‡πà 2.50% ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°',
        source: 'Bangkok Post',
        published_at: new Date().toISOString(),
        summary:
          '‡∏Ñ‡∏ì‡∏∞‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏µ‡∏°‡∏ï‡∏¥‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏≠‡∏Å‡∏â‡∏±‡∏ô‡∏ó‡πå‡∏Ñ‡∏á‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏î‡∏¥‡∏°',
        category: 'monetary_policy',
      },
      {
        title: '‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á FED ‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢',
        source: 'Thai PBS',
        published_at: new Date().toISOString(),
        summary: '‡∏î‡∏±‡∏ä‡∏ô‡∏µ SET ‡∏õ‡∏¥‡∏î‡∏ï‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà 1,425.67 ‡∏à‡∏∏‡∏î ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô 12.34 ‡∏à‡∏∏‡∏î',
        category: 'stock_market',
      },
      {
        title: '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡∏î‡∏¥‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏∂‡∏á‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡πÉ‡∏ô‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏≤‡∏á',
        source: 'Reuters',
        published_at: new Date().toISOString(),
        summary: '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡∏î‡∏¥‡∏ö Brent ‡∏õ‡∏¥‡∏î‡∏ï‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà 89.45 ‡∏î‡∏≠‡∏•‡∏•‡∏≤‡∏£‡πå‡∏ï‡πà‡∏≠‡∏ö‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏•',
        category: 'commodities',
      },
    ];

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πà‡∏≤‡∏ß‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô Git Memory
    for (const news of financialNews) {
      await this.gitMemory.store({
        type: 'financial_news',
        data: news,
        collected_at: new Date().toISOString(),
        source: 'financial_news_api',
      });
    }

    console.log(`‚úÖ Collected ${financialNews.length} financial news articles`);
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏° (‡∏à‡∏≥‡∏•‡∏≠‡∏á)
  async collectMutualFundData(): Promise<void> {
    console.log('üìä Collecting mutual fund data...');

    const mutualFunds = [
      {
        name: '‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢‡∏ï‡∏£‡∏≤‡∏™‡∏≤‡∏£‡∏´‡∏ô‡∏µ‡πâ',
        fundType: '‡∏ï‡∏£‡∏≤‡∏™‡∏≤‡∏£‡∏´‡∏ô‡∏µ‡πâ',
        nav: 12.3456,
        navChange: +0.0234,
        aum: 15000000000, // Assets Under Management
        riskLevel: 4,
        return_1y: 2.34,
        return_3y: 8.76,
      },
      {
        name: '‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà',
        fundType: '‡∏´‡∏∏‡πâ‡∏ô‡πÉ‡∏´‡∏ç‡πà',
        nav: 45.6789,
        navChange: -0.4567,
        aum: 85000000000,
        riskLevel: 6,
        return_1y: 12.45,
        return_3y: 28.9,
      },
    ];

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡πÉ‡∏ô Git Memory
    for (const fund of mutualFunds) {
      await this.gitMemory.store({
        type: 'mutual_fund',
        data: fund,
        collected_at: new Date().toISOString(),
        source: 'mutual_fund_data',
      });
    }

    console.log(`‚úÖ Collected ${mutualFunds.length} mutual funds`);
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô (‡∏à‡∏≥‡∏•‡∏≠‡∏á)
  async collectExchangeRates(): Promise<void> {
    console.log('üí± Collecting exchange rates...');

    const exchangeRates = [
      {
        from: 'THB',
        to: 'USD',
        rate: 0.0294,
        change: -0.0002,
        source: 'Bank of Thailand',
      },
      {
        from: 'THB',
        to: 'EUR',
        rate: 0.0271,
        change: +0.0001,
        source: 'Bank of Thailand',
      },
      {
        from: 'THB',
        to: 'JPY',
        rate: 4.45,
        change: +0.02,
        source: 'Bank of Thailand',
      },
    ];

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏ô Git Memory
    for (const rate of exchangeRates) {
      await this.gitMemory.store({
        type: 'exchange_rate',
        data: rate,
        collected_at: new Date().toISOString(),
        source: 'bot_exchange_rates',
      });
    }

    console.log(`‚úÖ Collected ${exchangeRates.length} exchange rates`);
  }

  // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô
  async showInvestmentStats(): Promise<void> {
    console.log('\nüìä Investment Data Statistics:');
    console.log(
      '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ'
    );

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Git Memory
    const setStocks = await this.gitMemory.retrieve({
      type: 'set_stock',
      limit: 100,
    });
    const cryptoData = await this.gitMemory.retrieve({
      type: 'crypto_currency',
      limit: 100,
    });
    const financialNews = await this.gitMemory.retrieve({
      type: 'financial_news',
      limit: 100,
    });
    const mutualFunds = await this.gitMemory.retrieve({
      type: 'mutual_fund',
      limit: 100,
    });
    const exchangeRates = await this.gitMemory.retrieve({
      type: 'exchange_rate',
      limit: 100,
    });

    console.log(`üìà SET Stocks: ${setStocks.length} symbols tracked`);
    console.log(`‚Çø Cryptocurrencies: ${cryptoData.length} coins tracked`);
    console.log(
      `üì∞ Financial News: ${financialNews.length} articles collected`
    );
    console.log(`üìä Mutual Funds: ${mutualFunds.length} funds tracked`);
    console.log(`üí± Exchange Rates: ${exchangeRates.length} currency pairs`);

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏£‡∏ß‡∏°
    const totalSETMarketCap = setStocks.reduce(
      (sum: number, stock: any) => sum + stock.data.marketCap,
      0
    );
    const totalCryptoMarketCap = cryptoData.reduce(
      (sum: number, crypto: any) => sum + crypto.data.market_cap,
      0
    );

    console.log(
      `üí∞ Total SET Market Cap: ${totalSETMarketCap.toLocaleString()} THB`
    );
    console.log(
      `‚Çø Total Crypto Market Cap: ${totalCryptoMarketCap.toLocaleString()} USD`
    );

    // ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ï‡∏•‡∏≤‡∏î
    const setGainers = setStocks.filter(
      (stock: any) => stock.data.change > 0
    ).length;
    const setLosers = setStocks.filter(
      (stock: any) => stock.data.change < 0
    ).length;
    const cryptoGainers = cryptoData.filter(
      (crypto: any) => crypto.data.change_24h > 0
    ).length;
    const cryptoLosers = cryptoData.filter(
      (crypto: any) => crypto.data.change_24h < 0
    ).length;

    console.log(`üìä SET Trend: ${setGainers} gainers, ${setLosers} losers`);
    console.log(
      `‚Çø Crypto Trend: ${cryptoGainers} gainers, ${cryptoLosers} losers`
    );
  }
}

// Main function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô
async function testInvestmentIntegration() {
  console.log('üéØ Starting Investment Website Integration Test...\n');

  try {
    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á Git Memory
    const gitMemory = {
      storage: new Map(),

      async store(data: any): Promise<void> {
        const type = data.type || 'unknown';
        if (!this.storage.has(type)) {
          this.storage.set(type, []);
        }
        this.storage.get(type)!.push({
          ...data,
          id: `${type}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        });
        console.log(`üíæ Stored ${type} data in Git Memory`);
      },

      async retrieve(query: any): Promise<any[]> {
        const type = query.type;
        const limit = query.limit || 100;
        if (!this.storage.has(type)) {
          return [];
        }
        return this.storage.get(type)!.slice(-limit);
      },
    };

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á investment data collector
    const investmentCollector = new InvestmentDataCollector(gitMemory);

    // ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á
    await investmentCollector.collectSETData();
    await investmentCollector.collectCryptoData();
    await investmentCollector.collectFinancialNews();
    await investmentCollector.collectMutualFundData();
    await investmentCollector.collectExchangeRates();

    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
    await investmentCollector.showInvestmentStats();

    console.log(
      '\nüéâ Investment Website Integration Test completed successfully!'
    );
    console.log(
      'üí° ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô Git Memory ‡∏û‡∏£‡πâ‡∏≠‡∏° version control'
    );
  } catch (error) {
    console.error('‚ùå Investment integration test failed:', error);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (import.meta.url === `file://${process.argv[1]}`) {
  testInvestmentIntegration().catch(console.error);
}

export { testInvestmentIntegration, InvestmentDataCollector };
